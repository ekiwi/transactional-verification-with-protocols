; BTOR description generated by Yosys 0.9+406 (git sha1 486cbddd, clang 8.0.0 -fPIC -Os) for module ser_add.
1 sort bitvec 1
2 input 1 a
3 input 1 b
5 input 1 clr
6 input 1 rst
7 xor 1 2 3
8 state 1 c_r
9 and 1 7 8
10 and 1 2 3
11 or 1 9 10
12 output 11 o_v
13 xor 1 7 8
14 output 13 q
15 uext 1 7 0 axorb
16 not 1 5
17 and 1 16 11
18 const 1 0
19 ite 1 6 18 17
20 next 1 8 19
;
;
; Spec
;
40 sort bitvec 2
; input a
41 state 40 a_spec
42 next 40 41 41
; input b
43 state 40 b_spec
44 next 40 43 43
; a + b
45 add 40 41 43
; output c
46 state 40 c_spec
47 next 40 46 46
; c = a + b
48 init 40 46 45

;
; verification counter (0->1->2->[3])
;
60 sort bitvec 2
; counter
61 zero 60
62 state 60 counter
63 init 60 62 61
64 one 60
; counter + 1
65 add 60 62 64
; counter' = counter + 1
66 next 60 62 65
; counter == 0
67 eq 1 62 61
; counter == 1
68 eq 1 62 64
; counter == 2
69 const 60 10
70 eq 1 62 69
; counter == 3
71 const 60 11
72 eq 1 62 71

; do not unrol to 3 (checks for `-kmax 2`)
73 bad 72


;
; inputs
;
80 one 1

; clr == 1
81 eq 1 5 80
; counter == 0 -> clr == 1
82 implies 1 67 81
83 constraint 82
; clr == 0
85 not 1 5
; counter == 1 -> clr == 0
86 implies 1 68 85
87 constraint 86
; counter == 2 -> clr == 0
88 implies 1 70 85
89 constraint 88


; counter == 1 -> a = a_spec[0]
90 slice 1 41 0 0
91 eq 1 2 90
92 implies 1 68 91
93 constraint 92
; counter == 2 -> a = a_spec[1]
95 slice 1 41 1 1
96 eq 1 2 95
97 implies 1 70 96
98 constraint 97

; counter == 1 -> b = b_spec[0]
100 slice 1 43 0 0
101 eq 1 3 100
102 implies 1 68 101
103 constraint 102
; counter == 2 -> b = b_spec[1]
105 slice 1 43 1 1
106 eq 1 3 105
107 implies 1 70 106
108 constraint 107

;
; verify result
;
; counter == 1 -> q = c_spec[0]
200 slice 1 46 0 0
201 eq 1 13 200
202 implies 1 68 201
203 not 1 202
204 bad 203
; counter == 2 -> q = c_spec[1]
205 slice 1 46 1 1
206 eq 1 13 205
207 implies 1 70 206
208 not 1 207
209 bad 208

; reset is always false
300 not 1 6
301 constraint 300




